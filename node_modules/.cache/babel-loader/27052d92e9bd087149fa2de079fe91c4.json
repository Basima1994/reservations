{"ast":null,"code":"import * as React from 'react';\nvar useContext = React.useContext,\n    useCallback = React.useCallback;\nimport { classNames } from '@progress/kendo-react-common';\nimport { SchedulerContext, SchedulerViewContext } from '../../context';\nimport { useLocalization } from '@progress/kendo-react-intl';\n/**\n * @hidden\n */\n\nexport var ToolbarViewSelector = function () {\n  var _a = React.useState(false),\n      expanded = _a[0],\n      setExpanded = _a[1];\n\n  var _b = useContext(SchedulerContext),\n      views = _b.views,\n      view = _b.view;\n\n  var onNavigationAction = React.useContext(SchedulerViewContext).onNavigationAction;\n  var onViewChange = React.useContext(SchedulerContext).onViewChange;\n  var localization = useLocalization();\n  var handleButtonClick = useCallback(function (event) {\n    var newView = views.find(function (vw) {\n      return vw.props.name === event.target.getAttribute('data-name');\n    });\n\n    if (!newView || !onViewChange) {\n      return;\n    }\n\n    event.preventDefault();\n    setExpanded(false);\n    onViewChange(newView);\n  }, [onNavigationAction, setExpanded]);\n  var handleCurrentClick = React.useCallback(function (event) {\n    event.preventDefault();\n    setExpanded(function (current) {\n      return !current;\n    });\n  }, [expanded, setExpanded]);\n  return view && React.createElement(\"ul\", {\n    className: classNames('k-scheduler-views k-reset', {\n      'k-state-expanded': expanded\n    })\n  }, React.createElement(\"li\", {\n    className: \"k-current-view\"\n  }, React.createElement(\"a\", {\n    role: \"button\",\n    href: \"#\",\n    className: \"k-link\",\n    onClick: handleCurrentClick\n  }, typeof view.props.title === 'function' ? view.props.title.call(undefined, localization) : view.props.title)), views.map(function (vw, idx) {\n    return React.createElement(\"li\", {\n      key: idx,\n      className: classNames('k-state-default', {\n        'k-state-selected': vw.props.name === view.props.name\n      })\n    }, React.createElement(\"a\", {\n      role: \"button\",\n      href: \"#\",\n      \"data-name\": vw.props.name,\n      className: \"k-link\",\n      onClick: handleButtonClick\n    }, typeof vw.props.title === 'function' ? vw.props.title.call(undefined, localization) : vw.props.title));\n  }));\n};","map":null,"metadata":{},"sourceType":"module"}