{"ast":null,"code":"import * as React from 'react';\nimport { getRect, getPadding, setRect } from '../../common/utils';\nimport { BORDER_WIDTH } from '../../../constants';\n/** @hidden */\n\nexport var useSlotExpand = function (args, condition) {\n  var element = args.element,\n      props = args.props;\n\n  var expand = function () {\n    if (!condition) {\n      return;\n    }\n\n    if (!element.current) {\n      return;\n    }\n\n    var highest = 0;\n    var slotPadding = getPadding(element.current);\n    (props.items || []).forEach(function (item) {\n      if (!item.ref.current || !item.ref.current.elements) {\n        return;\n      }\n\n      var fragment = item.ref.current.elements.find(function (el) {\n        var rangeIndex = el.getAttribute('data-range-index');\n        var groupIndex = el.getAttribute('data-group-index');\n        return props.groupIndex === undefined || rangeIndex === String(props.rangeIndex) || groupIndex === String(groupIndex);\n      });\n\n      if (!fragment) {\n        return;\n      }\n\n      var height = getRect(fragment).height;\n\n      if (height && height > highest) {\n        highest = height;\n      }\n    });\n    setRect(element.current, {\n      height: (props.items ? props.items.length : 0) * (highest + BORDER_WIDTH) - (slotPadding || 0)\n    }, true);\n  };\n\n  React.useEffect(expand);\n};","map":null,"metadata":{},"sourceType":"module"}