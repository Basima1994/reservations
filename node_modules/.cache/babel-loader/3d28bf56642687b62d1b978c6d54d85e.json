{"ast":null,"code":"import * as React from 'react';\nimport { getPadding, setRect } from '../views/common/utils';\n\nvar stripSelectorSymbol = function (str) {\n  return str.slice(1, str.length);\n};\n/** @hidden */\n\n\nexport var useRowSync = function (args, inputs) {\n  var element = args.element;\n\n  var syncHeight = function () {\n    if (!element || !element.current) {\n      return;\n    }\n\n    var highest = [[]];\n    var elements = Array.from(element.current.querySelectorAll(args.selector)).filter(function (el) {\n      return !el.classList.contains(stripSelectorSymbol(args.applyTo));\n    });\n    elements.forEach(function (el) {\n      var height = el.clientHeight;\n      var x = el.getAttribute(args.horizontalAttribute);\n      var y = el.getAttribute(args.verticalAttribute);\n\n      if (x === null || y === null) {\n        return;\n      }\n\n      if (!highest[x]) {\n        highest[x] = [];\n      }\n\n      if (!highest[x][y] || height > highest[x][y]) {\n        highest[x][y] = height;\n      }\n    });\n    var targets = Array.from(element.current.querySelectorAll(args.applyTo));\n    targets.forEach(function (el) {\n      var x = el.getAttribute(args.horizontalAttribute);\n      var y = el.getAttribute(args.verticalAttribute);\n\n      if (x === null || y === null) {\n        return;\n      }\n\n      var slotPadding = getPadding(el);\n      var height = highest[x][y] - slotPadding;\n      setRect(el, {\n        height: height\n      }, true);\n    });\n  };\n\n  React.useEffect(syncHeight, inputs);\n};","map":null,"metadata":{},"sourceType":"module"}