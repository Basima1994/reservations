{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport * as React from 'react';\nimport { expandResources, toGroupResources } from './utils';\nimport { SchedulerResourceContext } from '../../context/SchedulerResourceContext';\nimport { EMPTY_RESOURCE } from '../../constants';\n/** @hidden */\n\nexport var HorizontalResourceIterator = function (props) {\n  var nested = props.nested,\n      children = props.children,\n      rowContentProps = props.rowContentProps;\n  var rowContent = props.rowContent || DefaultRowContent;\n  var childRowContent = props.childRowContent || rowContent;\n  var resources = toGroupResources(props.group, props.resources);\n  var groupIndex = 0;\n  return React.createElement(\"div\", {\n    className: \"k-scheduler-group k-group-horizontal\"\n  }, nested ? renderResourcesRecursively({\n    resources: resources,\n    children: children,\n    nested: nested,\n    groupIndex: groupIndex,\n    rowContent: rowContent,\n    rowContentProps: rowContentProps,\n    childRowContent: childRowContent\n  }) : renderResources({\n    resources: resources,\n    children: children,\n    rowContent: rowContent,\n    nested: !!nested,\n    groupIndex: groupIndex,\n    rowContentProps: rowContentProps,\n    childRowContent: childRowContent\n  }));\n};\n\nvar renderResourcesRecursively = function (args) {\n  var resources = args.resources,\n      rowContent = args.rowContent,\n      nested = args.nested,\n      children = args.children,\n      groupIndex = args.groupIndex,\n      rowContentProps = args.rowContentProps,\n      childRowContent = args.childRowContent;\n\n  if (groupIndex === resources.length) {\n    return renderResources({\n      resources: resources,\n      rowContent: rowContent,\n      children: children,\n      nested: nested,\n      groupIndex: groupIndex,\n      rowContentProps: rowContentProps,\n      childRowContent: childRowContent\n    });\n  }\n\n  var expandedResources = expandResources(resources, groupIndex);\n  var RowContent = rowContent;\n  return React.createElement(React.Fragment, null, nested ? React.createElement(\"div\", {\n    className: \"k-scheduler-row\"\n  }, React.createElement(RowContent, __assign({\n    resources: resources,\n    groupIndex: groupIndex\n  }, rowContentProps), expandedResources.map(function (expandedResource, expandedResourceIndex) {\n    return React.createElement(\"div\", {\n      key: expandedResourceIndex,\n      className: \"k-scheduler-cell k-heading-cell\"\n    }, expandedResource.text);\n  }))) : React.createElement(RowContent, __assign({\n    resources: resources,\n    groupIndex: groupIndex\n  }, rowContentProps), expandedResources.map(function (expandedResource, expandedResourceIndex) {\n    return React.createElement(\"div\", {\n      key: expandedResourceIndex,\n      className: \"k-scheduler-cell k-heading-cell\"\n    }, expandedResource.text);\n  })), renderResourcesRecursively({\n    resources: resources,\n    children: children,\n    nested: nested,\n    rowContent: rowContent,\n    childRowContent: childRowContent,\n    groupIndex: groupIndex + 1\n  }));\n};\n\nvar renderResources = function (args) {\n  var resources = args.resources,\n      childRowContent = args.childRowContent,\n      children = args.children,\n      rowContentProps = args.rowContentProps;\n  var deepestResources = expandResources(resources, resources.length - 1);\n  var ChildRowContent = childRowContent;\n  var hasGroups = resources.length > 0;\n  return React.createElement(\"div\", {\n    className: \"k-scheduler-row\"\n  }, React.createElement(ChildRowContent, __assign({\n    resources: resources\n  }, rowContentProps), (deepestResources.length ? deepestResources : EMPTY_RESOURCE).map(function (resource, groupIndex) {\n    return React.createElement(\"div\", {\n      key: groupIndex,\n      className: \"k-scheduler-cell k-group-cell\"\n    }, React.createElement(SchedulerResourceContext.Provider, {\n      value: {\n        resource: resource,\n        groupIndex: hasGroups ? groupIndex : undefined\n      }\n    }, children));\n  })));\n};\n\nHorizontalResourceIterator.displayName = 'KendoReactSchedulerHorizontalResourceIterator';\n/** @hidden */\n\nexport var DefaultRowContent = function (props) {\n  return props.children;\n};","map":null,"metadata":{},"sourceType":"module"}