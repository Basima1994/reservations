{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { BaseView } from '../../components/BaseView';\nimport { useAgendaViewDateRange } from './hooks';\nimport { SchedulerContext } from '../../context';\nimport { VerticalResourceIterator } from '../common/VerticalResourceIterator';\nimport { SchedulerResourceContext } from '../../context/SchedulerResourceContext';\nimport { messages, dateTitle, timeTitle, eventTitle, noEvents, agendaViewTitle } from '../../messages';\nimport { AgendaViewHeaderItem } from './AgendaViewHeaderItem';\nimport { useCellSync } from '../../hooks';\nimport { DAYS_IN_WEEK_COUNT } from '../../constants';\nimport { addDays, Day } from '@progress/kendo-date-math';\nimport { toAgendaRanges, toAgendaItems } from '../../services';\nimport { toSchedulerItems } from '../../utils';\nimport { fragmentSplit } from '../common/fragmentSplit';\nimport { AgendaFragment } from './AgendaFragment';\nimport { classNames } from '@progress/kendo-react-common';\n/**\n * Represents the KendoReact [AgendaView]({% slug agenda_view_scheduler %}) Component.\n */\n\nexport var AgendaView = function (props) {\n  var element = React.useRef(null);\n  var _a = props.selectedDateFormat,\n      selectedDateFormat = _a === void 0 ? defaultProps.selectedDateFormat : _a,\n      _b = props.selectedShortDateFormat,\n      selectedShortDateFormat = _b === void 0 ? defaultProps.selectedShortDateFormat : _b,\n      _c = props.numberOfDays,\n      numberOfDays = _c === void 0 ? defaultProps.numberOfDays : _c;\n\n  var _d = React.useContext(SchedulerContext),\n      date = _d.date,\n      data = _d.data,\n      group = _d.group,\n      fields = _d.fields,\n      height = _d.height,\n      timezone = _d.timezone,\n      resources = _d.resources,\n      localization = _d.localization,\n      onDateChange = _d.onDateChange;\n\n  var dateRange = useAgendaViewDateRange(selectedDateFormat, selectedShortDateFormat, numberOfDays);\n  var ranges = React.useMemo(function () {\n    return toAgendaRanges(dateRange.start, dateRange.end, timezone, {\n      workWeekStart: Day.Monday,\n      workWeekEnd: Day.Friday\n    });\n  }, [dateRange.start.getTime(), dateRange.end.getTime(), timezone]);\n  var processedData = React.useMemo(function () {\n    return toSchedulerItems({\n      data: data,\n      fields: fields,\n      timezone: timezone,\n      group: group,\n      dateRange: dateRange,\n      resources: resources\n    });\n  }, [data, fields, timezone, dateRange.start.getTime(), dateRange.end.getTime(), resources]);\n  var items = React.useMemo(function () {\n    return toAgendaItems({\n      ranges: ranges,\n      timezone: timezone,\n      data: processedData,\n      rangeStart: dateRange.start,\n      rangeEnd: dateRange.end\n    });\n  }, [ranges, timezone, processedData, dateRange.start.getTime(), dateRange.end.getTime()]);\n  var fragments = items.reduce(function (acc, item) {\n    return acc.concat(fragmentSplit(item));\n  }, []);\n\n  var handleNavigationAction = function (action) {\n    if (!onDateChange) {\n      return;\n    }\n\n    switch (action.type) {\n      case 'next':\n        onDateChange(addDays(date, props.step || defaultProps.step));\n        return;\n\n      case 'prev':\n        onDateChange(addDays(date, -(props.step || defaultProps.step)));\n        return;\n\n      default:\n        return;\n    }\n  };\n\n  useCellSync({\n    element: element,\n    selector: '.k-scheduler-datecolumn',\n    explicitDepth: false\n  });\n  useCellSync({\n    element: element,\n    selector: '.k-scheduler-timecolumn',\n    explicitDepth: false\n  });\n  return React.createElement(BaseView, {\n    slots: [],\n    ranges: ranges,\n    dateRange: dateRange,\n    onNavigationAction: handleNavigationAction\n  }, React.createElement(\"div\", {\n    ref: element,\n    id: props.id,\n    style: __assign({\n      height: height\n    }, props.style),\n    className: classNames('k-scheduler-layout k-scheduler-agendaview k-scheduler-layout-flex', props.className)\n  }, React.createElement(\"div\", {\n    className: \"k-scheduler-head\"\n  }, React.createElement(VerticalResourceIterator, {\n    resources: resources,\n    group: group\n  }, React.createElement(SchedulerResourceContext.Consumer, null, function (_a) {\n    var groupIndex = _a.groupIndex;\n    return React.createElement(\"div\", {\n      className: \"k-scheduler-row\",\n      key: groupIndex\n    }, React.createElement(\"div\", {\n      className: \"k-scheduler-cell k-heading-cell k-group-cell k-scheduler-datecolumn\"\n    }, localization.toLanguageString(dateTitle, messages[dateTitle])), React.createElement(\"div\", {\n      className: \"k-scheduler-cell k-heading-cell k-group-cell k-scheduler-timecolumn\"\n    }, localization.toLanguageString(timeTitle, messages[timeTitle])), React.createElement(\"div\", {\n      className: \"k-scheduler-cell k-heading-cell k-scheduler-eventcolumn\"\n    }, localization.toLanguageString(eventTitle, messages[eventTitle])));\n  }))), React.createElement(\"div\", {\n    className: \"k-scheduler-body\"\n  }, React.createElement(VerticalResourceIterator, {\n    resources: resources,\n    group: group,\n    nested: true\n  }, React.createElement(SchedulerResourceContext.Consumer, null, function (_a) {\n    var groupIndex = _a.groupIndex;\n    var fragmentsInGroup = fragments.filter(function (i) {\n      return !i.group || i.group.index === groupIndex;\n    });\n    return ranges.map(function (range) {\n      var fragmentsInRange = fragmentsInGroup.filter(function (i) {\n        return i.range.index === range.index;\n      });\n      return React.createElement(\"div\", {\n        className: \"k-scheduler-row\",\n        key: range.index\n      }, React.createElement(AgendaViewHeaderItem, {\n        range: range\n      }), React.createElement(\"div\", {\n        className: \"k-scheduler-cell k-group-content\"\n      }, fragmentsInRange.length ? fragmentsInRange.map(function (item) {\n        return React.createElement(AgendaFragment, __assign({\n          key: item.occurrenceId !== undefined ? item.id + \"-\" + item.occurrenceId : \"\" + item.id\n        }, item));\n      }) : React.createElement(\"div\", {\n        className: \"k-scheduler-cell k-heading-cell k-group-cell\"\n      }, messages[noEvents])));\n    });\n  })))));\n};\nvar defaultProps = {\n  name: 'agenda',\n  title: function (localization) {\n    return localization.toLanguageString(agendaViewTitle, messages[agendaViewTitle]);\n  },\n  selectedDateFormat: '{0:D} - {1:D}',\n  selectedShortDateFormat: '{0:d} - {1:d}',\n  step: DAYS_IN_WEEK_COUNT,\n  numberOfDays: DAYS_IN_WEEK_COUNT\n};\nvar propTypes = {\n  title: PropTypes.any\n};\nAgendaView.propTypes = propTypes;\nAgendaView.defaultProps = defaultProps;","map":null,"metadata":{},"sourceType":"module"}