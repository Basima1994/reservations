{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport * as React from 'react';\nimport { MultiDayView } from '../day/MultiDayView';\nimport { DAYS_IN_WEEK_COUNT } from '../../constants';\nimport { useWeekViewDateRange } from './hooks';\nimport { weekViewTitle, messages } from '../../messages';\n/**\n * Represents the KendoReact [WeekView]({% slug week_views_scheduler %}) Component.\n */\n\nexport var WeekView = function (props) {\n  var dateRange = useWeekViewDateRange(props.selectedDateFormat, props.selectedShortDateFormat, DAYS_IN_WEEK_COUNT);\n  return React.createElement(MultiDayView, __assign({}, props, {\n    dateRange: dateRange,\n    step: DAYS_IN_WEEK_COUNT,\n    numberOfDays: DAYS_IN_WEEK_COUNT\n  }));\n};\nWeekView.defaultProps = {\n  name: 'week',\n  title: function (localization) {\n    return localization.toLanguageString(weekViewTitle, messages[weekViewTitle]);\n  },\n  selectedDateFormat: '{0:D} - {1:D}',\n  selectedShortDateFormat: '{0:d} - {1:d}'\n};\nWeekView.displayName = 'KendoReactSchedulerWeekView';","map":null,"metadata":{},"sourceType":"module"}