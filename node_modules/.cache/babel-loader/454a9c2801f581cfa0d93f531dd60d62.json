{"ast":null,"code":"import _slicedToArray from \"/Users/rbk-4/Desktop/MVP-JS/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/rbk-4/Desktop/MVP-JS/src/Calender.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { guid } from \"@progress/kendo-react-common\";\nimport { timezoneNames } from \"@progress/kendo-date-math\";\nimport { DropDownList } from \"@progress/kendo-react-dropdowns\";\nimport { IntlProvider, load, LocalizationProvider, loadMessages } from \"@progress/kendo-react-intl\";\nimport { Scheduler, TimelineView, DayView, WeekView, MonthView, AgendaView } from \"@progress/kendo-react-scheduler\";\nimport weekData from \"cldr-core/supplemental/weekData.json\";\nimport currencyData from \"cldr-core/supplemental/currencyData.json\";\nimport likelySubtags from \"cldr-core/supplemental/likelySubtags.json\";\nimport numbers from \"cldr-numbers-full/main/es/numbers.json\";\nimport dateFields from \"cldr-dates-full/main/es/dateFields.json\";\nimport currencies from \"cldr-numbers-full/main/es/currencies.json\";\nimport caGregorian from \"cldr-dates-full/main/es/ca-gregorian.json\";\nimport timeZoneNames from \"cldr-dates-full/main/es/timeZoneNames.json\";\nimport \"@progress/kendo-date-math/tz/Etc/UTC\";\nimport \"@progress/kendo-date-math/tz/Europe/Sofia\";\nimport \"@progress/kendo-date-math/tz/Europe/Madrid\";\nimport \"@progress/kendo-date-math/tz/Asia/Dubai\";\nimport \"@progress/kendo-date-math/tz/Asia/Tokyo\";\nimport \"@progress/kendo-date-math/tz/America/New_York\";\nimport \"@progress/kendo-date-math/tz/America/Los_Angeles\";\nimport esMessages from \"./es.json\";\nimport { sampleDataWithCustomSchema, displayDate, customModelFields } from \"./data\";\nload(likelySubtags, currencyData, weekData, numbers, currencies, caGregorian, dateFields, timeZoneNames);\nloadMessages(esMessages, \"es-ES\");\n\nconst Calender = () => {\n  const timezones = React.useMemo(() => timezoneNames(), []);\n  const locales = [{\n    language: \"en-US\",\n    locale: \"en\"\n  }, {\n    language: \"es-ES\",\n    locale: \"es\"\n  }];\n\n  const _React$useState = React.useState(\"day\"),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        view = _React$useState2[0],\n        setView = _React$useState2[1];\n\n  const _React$useState3 = React.useState(displayDate),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        date = _React$useState4[0],\n        setDate = _React$useState4[1];\n\n  const _React$useState5 = React.useState(locales[0]),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        locale = _React$useState6[0],\n        setLocale = _React$useState6[1];\n\n  const _React$useState7 = React.useState(\"Etc/UTC\"),\n        _React$useState8 = _slicedToArray(_React$useState7, 2),\n        timezone = _React$useState8[0],\n        setTimezone = _React$useState8[1];\n\n  const _React$useState9 = React.useState(\"horizontal\"),\n        _React$useState10 = _slicedToArray(_React$useState9, 2),\n        orientation = _React$useState10[0],\n        setOrientation = _React$useState10[1];\n\n  const _React$useState11 = React.useState(sampleDataWithCustomSchema),\n        _React$useState12 = _slicedToArray(_React$useState11, 2),\n        data = _React$useState12[0],\n        setData = _React$useState12[1];\n\n  const handleViewChange = React.useCallback(event => {\n    setView(event.value);\n  }, [setView]);\n  const handleDateChange = React.useCallback(event => {\n    setDate(event.value);\n  }, [setDate]);\n  const handleLocaleChange = React.useCallback(event => {\n    setLocale(event.target.value);\n  }, [setLocale]);\n  const handleTimezoneChange = React.useCallback(event => {\n    setTimezone(event.target.value);\n  }, [setTimezone]);\n  const handleOrientationChange = React.useCallback(event => {\n    setOrientation(event.target.getAttribute(\"data-orientation\"));\n  }, []);\n  const handleDataChange = React.useCallback(({\n    created,\n    updated,\n    deleted\n  }) => {\n    setData(old => old.filter(item => deleted.find(current => current.TaskID === item.TaskID) === undefined).map(item => updated.find(current => current.TaskID === item.TaskID) || item).concat(created.map(item => Object.assign({}, item, {\n      TaskID: guid()\n    }))));\n  }, [setData]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"example-config\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, \"Timezone:\"), React.createElement(DropDownList, {\n    value: timezone,\n    onChange: handleTimezoneChange,\n    data: timezones,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, \"Locale:\"), React.createElement(DropDownList, {\n    value: locale,\n    onChange: handleLocaleChange,\n    data: locales,\n    textField: \"language\",\n    dataItemKey: \"locale\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, \"Orientation:\"), React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"orientation\",\n    id: \"horizontal\",\n    \"data-orientation\": \"horizontal\",\n    className: \"k-radio\",\n    checked: orientation === \"horizontal\",\n    onChange: handleOrientationChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    className: \"k-radio-label\",\n    htmlFor: \"horizontal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, \"Horizontal\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"orientation\",\n    id: \"vertical\",\n    \"data-orientation\": \"vertical\",\n    className: \"k-radio\",\n    checked: orientation === \"vertical\",\n    onChange: handleOrientationChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    className: \"k-radio-label\",\n    htmlFor: \"vertical\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, \"Vertical\")))), React.createElement(LocalizationProvider, {\n    language: locale.language,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, React.createElement(IntlProvider, {\n    locale: locale.locale,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, React.createElement(Scheduler, {\n    data: data,\n    onDataChange: handleDataChange,\n    view: view,\n    onViewChange: handleViewChange,\n    date: date,\n    onDateChange: handleDateChange,\n    editable: true,\n    timezone: timezone,\n    modelFields: customModelFields,\n    group: {\n      resources: [\"Rooms\", \"Persons\"],\n      orientation\n    },\n    resources: [{\n      name: \"Rooms\",\n      data: [{\n        text: \"Meeting Room 101\",\n        value: 1\n      }, {\n        text: \"Meeting Room 201\",\n        value: 2,\n        color: \"#FF7272\"\n      }],\n      field: \"RoomID\",\n      valueField: \"value\",\n      textField: \"text\",\n      colorField: \"color\"\n    }, {\n      name: \"Persons\",\n      data: [{\n        text: \"Peter\",\n        value: 1,\n        color: \"#5392E4\"\n      }, {\n        text: \"Alex\",\n        value: 2,\n        color: \"#54677B\"\n      }],\n      field: \"PersonIDs\",\n      valueField: \"value\",\n      textField: \"text\",\n      colorField: \"color\"\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, React.createElement(TimelineView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }), React.createElement(DayView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }), React.createElement(WeekView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }), React.createElement(MonthView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }), React.createElement(AgendaView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  })))));\n};\n\nexport default Calender; // import React from \"react\";\n// import { render } from \"react-dom\";\n// import Paper from \"@material-ui/core/Paper\";\n// import { ViewState } from \"@devexpress/dx-react-scheduler\";\n// import {\n//   Scheduler,\n//   WeekView,\n//   Appointments,\n//   Toolbar,\n//   DateNavigator\n// } from \"@devexpress/dx-react-scheduler-material-ui\";\n// import { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\n// import { blue } from \"@material-ui/core/colors\";\n// import { appointments } from \"./data\";\n// const theme = createMuiTheme({ palette: { type: \"light\", primary: blue } });\n// var today = new Date();\n// var date =\n//   today.getFullYear() + \"-\" + (today.getMonth() + 1) + \"-\" + today.getDate();\n// console.log(date);\n// const CustomNavigationButton = props => {\n//   console.log(props); // { onVisibilityToggle, text }\n//   return <DateNavigator.NavigationButton {...props} />;\n// };\n// export default class Calender extends React.PureComponent {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       data: appointments\n//     };\n//   }\n//   render() {\n//     const { data } = this.state;\n//     return (\n//       <MuiThemeProvider theme={theme}>\n//         <Paper>\n//           <Scheduler data={data}>\n//             <ViewState currentDate=\"2018-06-28\" />\n//             <WeekView startDayHour={9} endDayHour={30} />\n//             <Appointments />\n//             <Toolbar />\n//             <DateNavigator navigationButtonComponent={CustomNavigationButton} />\n//           </Scheduler>\n//         </Paper>\n//       </MuiThemeProvider>\n//     );\n//   }\n// }\n// // export default class App extends React.PureComponent {\n// //   constructor(props) {\n// //     super(props);\n// //     this.state = {\n// //       data: appointments\n// //     };\n// //     console.log(this.state.data);\n// //   }\n// //   render() {\n// //     const { data } = this.state;\n// //     return (\n// //       <MuiThemeProvider theme={theme}>\n// //         <Paper>\n// //           <Scheduler data={data}>\n// //             <ViewState currentDate={date} />\n// //             <WeekView startDayHour={9} endDayHour={30} />\n// //             <Appointments />\n// //           </Scheduler>\n// //         </Paper>\n// //       </MuiThemeProvider>\n// //     );\n// //   }\n// // }","map":{"version":3,"sources":["/Users/rbk-4/Desktop/MVP-JS/src/Calender.js"],"names":["React","ReactDOM","guid","timezoneNames","DropDownList","IntlProvider","load","LocalizationProvider","loadMessages","Scheduler","TimelineView","DayView","WeekView","MonthView","AgendaView","weekData","currencyData","likelySubtags","numbers","dateFields","currencies","caGregorian","timeZoneNames","esMessages","sampleDataWithCustomSchema","displayDate","customModelFields","Calender","timezones","useMemo","locales","language","locale","useState","view","setView","date","setDate","setLocale","timezone","setTimezone","orientation","setOrientation","data","setData","handleViewChange","useCallback","event","value","handleDateChange","handleLocaleChange","target","handleTimezoneChange","handleOrientationChange","getAttribute","handleDataChange","created","updated","deleted","old","filter","item","find","current","TaskID","undefined","map","concat","Object","assign","resources","name","text","color","field","valueField","textField","colorField"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { guid } from \"@progress/kendo-react-common\";\nimport { timezoneNames } from \"@progress/kendo-date-math\";\nimport { DropDownList } from \"@progress/kendo-react-dropdowns\";\nimport {\n  IntlProvider,\n  load,\n  LocalizationProvider,\n  loadMessages\n} from \"@progress/kendo-react-intl\";\nimport {\n  Scheduler,\n  TimelineView,\n  DayView,\n  WeekView,\n  MonthView,\n  AgendaView\n} from \"@progress/kendo-react-scheduler\";\n\nimport weekData from \"cldr-core/supplemental/weekData.json\";\nimport currencyData from \"cldr-core/supplemental/currencyData.json\";\nimport likelySubtags from \"cldr-core/supplemental/likelySubtags.json\";\n\nimport numbers from \"cldr-numbers-full/main/es/numbers.json\";\nimport dateFields from \"cldr-dates-full/main/es/dateFields.json\";\nimport currencies from \"cldr-numbers-full/main/es/currencies.json\";\nimport caGregorian from \"cldr-dates-full/main/es/ca-gregorian.json\";\nimport timeZoneNames from \"cldr-dates-full/main/es/timeZoneNames.json\";\n\nimport \"@progress/kendo-date-math/tz/Etc/UTC\";\nimport \"@progress/kendo-date-math/tz/Europe/Sofia\";\nimport \"@progress/kendo-date-math/tz/Europe/Madrid\";\nimport \"@progress/kendo-date-math/tz/Asia/Dubai\";\nimport \"@progress/kendo-date-math/tz/Asia/Tokyo\";\nimport \"@progress/kendo-date-math/tz/America/New_York\";\nimport \"@progress/kendo-date-math/tz/America/Los_Angeles\";\n\nimport esMessages from \"./es.json\";\nimport {\n  sampleDataWithCustomSchema,\n  displayDate,\n  customModelFields\n} from \"./data\";\n\nload(\n  likelySubtags,\n  currencyData,\n  weekData,\n  numbers,\n  currencies,\n  caGregorian,\n  dateFields,\n  timeZoneNames\n);\nloadMessages(esMessages, \"es-ES\");\n\nconst Calender = () => {\n  const timezones = React.useMemo(() => timezoneNames(), []);\n  const locales = [\n    { language: \"en-US\", locale: \"en\" },\n    { language: \"es-ES\", locale: \"es\" }\n  ];\n\n  const [view, setView] = React.useState(\"day\");\n  const [date, setDate] = React.useState(displayDate);\n  const [locale, setLocale] = React.useState(locales[0]);\n  const [timezone, setTimezone] = React.useState(\"Etc/UTC\");\n  const [orientation, setOrientation] = React.useState(\"horizontal\");\n  const [data, setData] = React.useState(sampleDataWithCustomSchema);\n\n  const handleViewChange = React.useCallback(\n    event => {\n      setView(event.value);\n    },\n    [setView]\n  );\n\n  const handleDateChange = React.useCallback(\n    event => {\n      setDate(event.value);\n    },\n    [setDate]\n  );\n\n  const handleLocaleChange = React.useCallback(\n    event => {\n      setLocale(event.target.value);\n    },\n    [setLocale]\n  );\n\n  const handleTimezoneChange = React.useCallback(\n    event => {\n      setTimezone(event.target.value);\n    },\n    [setTimezone]\n  );\n\n  const handleOrientationChange = React.useCallback(event => {\n    setOrientation(event.target.getAttribute(\"data-orientation\"));\n  }, []);\n\n  const handleDataChange = React.useCallback(\n    ({ created, updated, deleted }) => {\n      setData(old =>\n        old\n          .filter(\n            item =>\n              deleted.find(current => current.TaskID === item.TaskID) ===\n              undefined\n          )\n          .map(\n            item =>\n              updated.find(current => current.TaskID === item.TaskID) || item\n          )\n          .concat(\n            created.map(item => Object.assign({}, item, { TaskID: guid() }))\n          )\n      );\n    },\n    [setData]\n  );\n\n  return (\n    <div>\n      <div className=\"example-config\">\n        <div className=\"row\">\n          <div className=\"col\">\n            <h5>Timezone:</h5>\n            <DropDownList\n              value={timezone}\n              onChange={handleTimezoneChange}\n              data={timezones}\n            />\n          </div>\n          <div className=\"col\">\n            <h5>Locale:</h5>\n            <DropDownList\n              value={locale}\n              onChange={handleLocaleChange}\n              data={locales}\n              textField=\"language\"\n              dataItemKey=\"locale\"\n            />\n          </div>\n          <div className=\"col\">\n            <h5>Orientation:</h5>\n            <input\n              type=\"radio\"\n              name=\"orientation\"\n              id=\"horizontal\"\n              data-orientation=\"horizontal\"\n              className=\"k-radio\"\n              checked={orientation === \"horizontal\"}\n              onChange={handleOrientationChange}\n            />\n            <label className=\"k-radio-label\" htmlFor=\"horizontal\">\n              Horizontal\n            </label>\n            <br />\n            <input\n              type=\"radio\"\n              name=\"orientation\"\n              id=\"vertical\"\n              data-orientation=\"vertical\"\n              className=\"k-radio\"\n              checked={orientation === \"vertical\"}\n              onChange={handleOrientationChange}\n            />\n            <label className=\"k-radio-label\" htmlFor=\"vertical\">\n              Vertical\n            </label>\n          </div>\n        </div>\n      </div>\n      <LocalizationProvider language={locale.language}>\n        <IntlProvider locale={locale.locale}>\n          <Scheduler\n            data={data}\n            onDataChange={handleDataChange}\n            view={view}\n            onViewChange={handleViewChange}\n            date={date}\n            onDateChange={handleDateChange}\n            editable={true}\n            timezone={timezone}\n            modelFields={customModelFields}\n            group={{\n              resources: [\"Rooms\", \"Persons\"],\n              orientation\n            }}\n            resources={[\n              {\n                name: \"Rooms\",\n                data: [\n                  { text: \"Meeting Room 101\", value: 1 },\n                  { text: \"Meeting Room 201\", value: 2, color: \"#FF7272\" }\n                ],\n                field: \"RoomID\",\n                valueField: \"value\",\n                textField: \"text\",\n                colorField: \"color\"\n              },\n              {\n                name: \"Persons\",\n                data: [\n                  { text: \"Peter\", value: 1, color: \"#5392E4\" },\n                  { text: \"Alex\", value: 2, color: \"#54677B\" }\n                ],\n                field: \"PersonIDs\",\n                valueField: \"value\",\n                textField: \"text\",\n                colorField: \"color\"\n              }\n            ]}\n          >\n            <TimelineView />\n            <DayView />\n            <WeekView />\n            <MonthView />\n            <AgendaView />\n          </Scheduler>\n        </IntlProvider>\n      </LocalizationProvider>\n    </div>\n  );\n};\nexport default Calender;\n\n// import React from \"react\";\n// import { render } from \"react-dom\";\n// import Paper from \"@material-ui/core/Paper\";\n// import { ViewState } from \"@devexpress/dx-react-scheduler\";\n// import {\n//   Scheduler,\n//   WeekView,\n//   Appointments,\n//   Toolbar,\n//   DateNavigator\n// } from \"@devexpress/dx-react-scheduler-material-ui\";\n// import { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\n// import { blue } from \"@material-ui/core/colors\";\n// import { appointments } from \"./data\";\n\n// const theme = createMuiTheme({ palette: { type: \"light\", primary: blue } });\n// var today = new Date();\n// var date =\n//   today.getFullYear() + \"-\" + (today.getMonth() + 1) + \"-\" + today.getDate();\n// console.log(date);\n\n// const CustomNavigationButton = props => {\n//   console.log(props); // { onVisibilityToggle, text }\n//   return <DateNavigator.NavigationButton {...props} />;\n// };\n\n// export default class Calender extends React.PureComponent {\n//   constructor(props) {\n//     super(props);\n\n//     this.state = {\n//       data: appointments\n//     };\n//   }\n//   render() {\n//     const { data } = this.state;\n\n//     return (\n//       <MuiThemeProvider theme={theme}>\n//         <Paper>\n//           <Scheduler data={data}>\n//             <ViewState currentDate=\"2018-06-28\" />\n//             <WeekView startDayHour={9} endDayHour={30} />\n//             <Appointments />\n//             <Toolbar />\n//             <DateNavigator navigationButtonComponent={CustomNavigationButton} />\n//           </Scheduler>\n//         </Paper>\n//       </MuiThemeProvider>\n//     );\n//   }\n// }\n\n// // export default class App extends React.PureComponent {\n// //   constructor(props) {\n// //     super(props);\n\n// //     this.state = {\n// //       data: appointments\n// //     };\n// //     console.log(this.state.data);\n// //   }\n\n// //   render() {\n// //     const { data } = this.state;\n\n// //     return (\n// //       <MuiThemeProvider theme={theme}>\n// //         <Paper>\n// //           <Scheduler data={data}>\n// //             <ViewState currentDate={date} />\n// //             <WeekView startDayHour={9} endDayHour={30} />\n// //             <Appointments />\n// //           </Scheduler>\n// //         </Paper>\n// //       </MuiThemeProvider>\n// //     );\n// //   }\n// // }\n"]},"metadata":{},"sourceType":"module"}