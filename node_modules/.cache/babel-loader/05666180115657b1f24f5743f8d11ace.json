{"ast":null,"code":"import _objectSpread from \"/Users/rbk-4/Desktop/reservations/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/rbk-4/Desktop/reservations/src/Calender.js\";\nimport * as React from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport $ from \"jquery\";\nimport { ViewState, EditingState, IntegratedEditing } from \"@devexpress/dx-react-scheduler\";\nimport { Scheduler, Toolbar, MonthView, WeekView, DayView, ViewSwitcher, Appointments, AppointmentTooltip, AppointmentForm, DragDropProvider, EditRecurrenceMenu, AllDayPanel, ConfirmationDialog } from \"@devexpress/dx-react-scheduler-material-ui\";\nimport { connectProps } from \"@devexpress/dx-react-core\";\nimport { KeyboardDateTimePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport MomentUtils from \"@date-io/moment\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Button from \"@material-ui/core/Button\";\nimport Fab from \"@material-ui/core/Fab\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport TextField from \"@material-ui/core/TextField\";\nimport EventNoteIcon from \"@material-ui/icons/EventNote\";\nimport Notes from \"@material-ui/icons/Notes\";\nimport Close from \"@material-ui/icons/Close\";\nimport CalendarToday from \"@material-ui/icons/CalendarToday\";\nimport Create from \"@material-ui/icons/Create\";\nimport axios from \"axios\";\nimport { appointments } from \"./data\";\n\nconst containerStyles = theme => ({\n  container: {\n    width: theme.spacing(68),\n    padding: 0,\n    paddingBottom: theme.spacing(2)\n  },\n  content: {\n    padding: theme.spacing(2),\n    paddingTop: 0\n  },\n  header: {\n    overflow: \"hidden\",\n    paddingTop: theme.spacing(0.5)\n  },\n  closeButton: {\n    float: \"right\"\n  },\n  buttonGroup: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    padding: theme.spacing(0, 2)\n  },\n  button: {\n    marginLeft: theme.spacing(2)\n  },\n  picker: {\n    marginRight: theme.spacing(2),\n    \"&:last-child\": {\n      marginRight: 0\n    },\n    width: \"50%\"\n  },\n  wrapper: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    padding: theme.spacing(1, 0)\n  },\n  icon: {\n    margin: theme.spacing(2, 0),\n    marginRight: theme.spacing(2)\n  },\n  textField: {\n    width: \"100%\"\n  }\n});\n\nvar today = new Date();\nvar date = today.getFullYear() + \"-\" + (today.getMonth() + 1) + \"-\" + today.getDate();\n\nclass AppointmentFormContainerBasic extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = () => function (e) {\n      this.setState({\n        title: e.target.value\n      });\n    };\n\n    this.state = {\n      appointmentChanges: {}\n    };\n\n    this.getAppointmentData = () => {\n      const appointmentData = this.props.appointmentData;\n      return appointmentData;\n    };\n\n    this.getAppointmentChanges = () => {\n      const appointmentChanges = this.state.appointmentChanges;\n      return appointmentChanges;\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.changeAppointment = this.changeAppointment.bind(this);\n    this.commitAppointment = this.commitAppointment.bind(this);\n  }\n\n  changeAppointment({\n    field,\n    changes\n  }) {\n    const nextChanges = _objectSpread({}, this.getAppointmentChanges(), {\n      [field]: changes\n    });\n\n    this.setState({\n      appointmentChanges: nextChanges\n    });\n  }\n\n  commitAppointment(type) {\n    const commitChanges = this.props.commitChanges;\n\n    const appointment = _objectSpread({}, this.getAppointmentData(), {}, this.getAppointmentChanges());\n\n    if (type === \"deleted\") {\n      commitChanges({\n        [type]: appointment._id\n      });\n    } else if (type === \"changed\") {\n      commitChanges({\n        [type]: {\n          [appointment._id]: appointment\n        }\n      });\n    } else {\n      commitChanges({\n        [type]: appointment\n      });\n    }\n\n    this.setState({\n      appointmentChanges: {}\n    });\n  }\n\n  render() {\n    const _this$props = this.props,\n          classes = _this$props.classes,\n          visible = _this$props.visible,\n          visibleChange = _this$props.visibleChange,\n          appointmentData = _this$props.appointmentData,\n          cancelAppointment = _this$props.cancelAppointment,\n          target = _this$props.target,\n          onHide = _this$props.onHide;\n    const appointmentChanges = this.state.appointmentChanges;\n\n    const displayAppointmentData = _objectSpread({}, appointmentData, {}, appointmentChanges);\n\n    var li = window.location.pathname.slice(4);\n    console.log(li);\n    const isNewAppointment = appointmentData._id === undefined;\n    const applyChanges = isNewAppointment ? () => {\n      this.commitAppointment(\"added\");\n      axios.post(\"/Appointments\", {\n        title: this.state.appointmentChanges.title,\n        startDate: this.state.appointmentChanges.startDate,\n        endDate: this.state.appointmentChanges.endDate,\n        notes: this.state.appointmentChanges.notes,\n        type: this.state.appointmentChanges.type,\n        shopId: li\n      });\n      console.log(\"if new\", this.state.appointmentChanges);\n    } : () => {\n      this.commitAppointment(\"changed\");\n      axios.post(\"/Appointments\", this.state.appointmentChanges);\n      console.log(\"old\", this.state.appointmentChanges);\n    };\n\n    const textEditorProps = field => ({\n      variant: \"outlined\",\n      onChange: ({\n        target: change\n      }) => this.changeAppointment({\n        field: [field],\n        changes: change.value\n      }),\n      value: displayAppointmentData[field] || \"\",\n      label: field[0].toUpperCase() + field.slice(1),\n      className: classes.textField\n    });\n\n    const pickerEditorProps = field => ({\n      className: classes.picker,\n      // keyboard: true,\n      ampm: false,\n      value: displayAppointmentData[field],\n      onChange: date => this.changeAppointment({\n        field: [field],\n        changes: date ? date.toDate() : new Date(displayAppointmentData[field])\n      }),\n      inputVariant: \"outlined\",\n      format: \"DD/MM/YYYY HH:mm\",\n      onError: () => null\n    });\n\n    const cancelChanges = () => {\n      this.setState({\n        appointmentChanges: {}\n      });\n      visibleChange();\n      cancelAppointment();\n    };\n\n    return React.createElement(AppointmentForm.Overlay, {\n      visible: visible,\n      target: target,\n      fullSize: true,\n      onHide: onHide,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.header,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      className: classes.closeButton,\n      onClick: cancelChanges,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, React.createElement(Close, {\n      color: \"action\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: classes.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.wrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, React.createElement(Create, {\n      className: classes.icon,\n      color: \"action\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }), React.createElement(TextField, Object.assign({}, textEditorProps(\"title\"), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: classes.wrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, React.createElement(CalendarToday, {\n      className: classes.icon,\n      color: \"action\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }), React.createElement(MuiPickersUtilsProvider, {\n      utils: MomentUtils,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, React.createElement(KeyboardDateTimePicker, Object.assign({\n      label: \"Start Date\"\n    }, pickerEditorProps(\"startDate\"), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    })), React.createElement(KeyboardDateTimePicker, Object.assign({\n      label: \"End Date\"\n    }, pickerEditorProps(\"endDate\"), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: classes.wrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, React.createElement(EventNoteIcon, {\n      className: classes.icon,\n      color: \"action\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }), React.createElement(TextField, Object.assign({}, textEditorProps(\"type\"), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: classes.wrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, React.createElement(Notes, {\n      className: classes.icon,\n      color: \"action\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }), React.createElement(TextField, Object.assign({\n      ref: x => this.notes = x\n    }, textEditorProps(\"notes\"), {\n      multiline: true,\n      rows: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: classes.buttonGroup,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, !isNewAppointment && React.createElement(Button, {\n      variant: \"outlined\",\n      color: \"secondary\",\n      className: classes.button,\n      onClick: () => {\n        visibleChange();\n        this.commitAppointment(\"deleted\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, \"Delete\"), React.createElement(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      className: classes.button,\n      onClick: () => {\n        visibleChange();\n        applyChanges();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, isNewAppointment ? \"Create\" : \"Save\"))));\n  }\n\n}\n\nconst AppointmentFormContainer = withStyles(containerStyles, {\n  name: \"AppointmentFormContainer\"\n})(AppointmentFormContainerBasic);\n\nconst styles = theme => ({\n  addButton: {\n    position: \"absolute\",\n    bottom: theme.spacing(1) * 3,\n    right: theme.spacing(1) * 4\n  }\n});\n\nclass Calender extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: appointments,\n      currentDate: date,\n      confirmationVisible: false,\n      editingFormVisible: false,\n      deletedAppointmentId: undefined,\n      editingAppointment: undefined,\n      previousAppointment: undefined,\n      addedAppointment: {},\n      startDayHour: 0,\n      endDayHour: 24,\n      isNewAppointment: false\n    };\n    var that = this;\n    $.ajax({\n      url: \"/Appointments\",\n      type: \"GET\",\n      dataType: \"JSON\",\n      success: function (data) {\n        that.setState({\n          data: data\n        });\n        console.log(\"get\", that.state.data);\n      },\n      error: function (err) {\n        console.log(err);\n      }\n    });\n    this.toggleConfirmationVisible = this.toggleConfirmationVisible.bind(this);\n    this.commitDeletedAppointment = this.commitDeletedAppointment.bind(this);\n    this.toggleEditingFormVisibility = this.toggleEditingFormVisibility.bind(this);\n    this.commitChanges = this.commitChanges.bind(this);\n    this.onEditingAppointmentChange = this.onEditingAppointmentChange.bind(this);\n    this.onAddedAppointmentChange = this.onAddedAppointmentChange.bind(this);\n    this.appointmentForm = connectProps(AppointmentFormContainer, () => {\n      const _this$state = this.state,\n            editingFormVisible = _this$state.editingFormVisible,\n            editingAppointment = _this$state.editingAppointment,\n            data = _this$state.data,\n            addedAppointment = _this$state.addedAppointment,\n            isNewAppointment = _this$state.isNewAppointment,\n            previousAppointment = _this$state.previousAppointment;\n      const currentAppointment = data.filter(appointment => editingAppointment && appointment._id === editingAppointment._id)[0] || addedAppointment;\n\n      const cancelAppointment = () => {\n        if (isNewAppointment) {\n          this.setState({\n            editingAppointment: previousAppointment,\n            isNewAppointment: false\n          });\n        }\n      };\n\n      return {\n        visible: editingFormVisible,\n        appointmentData: currentAppointment,\n        commitChanges: this.commitChanges,\n        visibleChange: this.toggleEditingFormVisibility,\n        onEditingAppointmentChange: this.onEditingAppointmentChange,\n        cancelAppointment\n      };\n    });\n  }\n\n  componentDidUpdate() {\n    this.appointmentForm.update();\n  }\n\n  onEditingAppointmentChange(editingAppointment) {\n    this.setState({\n      editingAppointment\n    });\n  }\n\n  onAddedAppointmentChange(addedAppointment) {\n    this.setState({\n      addedAppointment\n    });\n    const editingAppointment = this.state.editingAppointment;\n\n    if (editingAppointment !== undefined) {\n      this.setState({\n        previousAppointment: editingAppointment\n      });\n    }\n\n    this.setState({\n      editingAppointment: undefined,\n      isNewAppointment: true\n    });\n  }\n\n  setDeletedAppointmentId(_id) {\n    this.setState({\n      deletedAppointmentId: _id\n    });\n  }\n\n  toggleEditingFormVisibility() {\n    const editingFormVisible = this.state.editingFormVisible;\n    this.setState({\n      editingFormVisible: !editingFormVisible\n    });\n  }\n\n  toggleConfirmationVisible() {\n    const confirmationVisible = this.state.confirmationVisible;\n    this.setState({\n      confirmationVisible: !confirmationVisible\n    });\n  }\n\n  commitDeletedAppointment() {\n    this.setState(state => {\n      const data = state.data,\n            deletedAppointmentId = state.deletedAppointmentId;\n      const nextData = data.filter(appointment => appointment._id !== deletedAppointmentId);\n      return {\n        data: nextData,\n        deletedAppointmentId: null\n      };\n    });\n    this.toggleConfirmationVisible();\n  } // function for the editing and deletion\n\n\n  commitChanges({\n    added,\n    changed,\n    deleted\n  }) {\n    this.setState(state => {\n      let data = state.data;\n\n      if (added) {\n        const startingAddedId = data.length > 0 ? data[data.length - 1]._id + 1 : 0;\n        data = [...data, _objectSpread({\n          _id: startingAddedId\n        }, added)];\n      }\n\n      if (changed) {\n        data = data.map(appointment => changed[appointment._id] ? _objectSpread({}, appointment, {}, changed[appointment._id]) : appointment);\n      }\n\n      if (deleted !== undefined) {\n        this.setDeletedAppointmentId(deleted);\n        this.toggleConfirmationVisible();\n      }\n\n      return {\n        data,\n        addedAppointment: {}\n      };\n    });\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          currentDate = _this$state2.currentDate,\n          data = _this$state2.data,\n          confirmationVisible = _this$state2.confirmationVisible,\n          editingFormVisible = _this$state2.editingFormVisible,\n          startDayHour = _this$state2.startDayHour,\n          endDayHour = _this$state2.endDayHour;\n    const classes = this.props.classes;\n    return React.createElement(Paper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476\n      },\n      __self: this\n    }, React.createElement(Scheduler, {\n      data: data,\n      height: 660,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 477\n      },\n      __self: this\n    }, React.createElement(ViewState, {\n      currentDate: currentDate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478\n      },\n      __self: this\n    }), React.createElement(EditingState, {\n      onCommitChanges: this.commitChanges,\n      onEditingAppointmentChange: this.onEditingAppointmentChange,\n      onAddedAppointmentChange: this.onAddedAppointmentChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479\n      },\n      __self: this\n    }), React.createElement(IntegratedEditing, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484\n      },\n      __self: this\n    }), React.createElement(DayView, {\n      startDayHour: 0,\n      endDayHour: 24,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485\n      },\n      __self: this\n    }), React.createElement(WeekView, {\n      startDayHour: startDayHour,\n      endDayHour: endDayHour,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487\n      },\n      __self: this\n    }), React.createElement(MonthView, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488\n      },\n      __self: this\n    }), React.createElement(AllDayPanel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489\n      },\n      __self: this\n    }), React.createElement(EditRecurrenceMenu, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490\n      },\n      __self: this\n    }), React.createElement(ConfirmationDialog, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491\n      },\n      __self: this\n    }), React.createElement(Appointments, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492\n      },\n      __self: this\n    }), React.createElement(AppointmentTooltip, {\n      showOpenButton: true,\n      showCloseButton: true,\n      showDeleteButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 493\n      },\n      __self: this\n    }), React.createElement(Toolbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 494\n      },\n      __self: this\n    }), React.createElement(ViewSwitcher, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495\n      },\n      __self: this\n    }), React.createElement(AppointmentForm, {\n      overlayComponent: this.appointmentForm,\n      visible: editingFormVisible,\n      onVisibilityChange: this.toggleEditingFormVisibility,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496\n      },\n      __self: this\n    }), React.createElement(DragDropProvider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501\n      },\n      __self: this\n    })), React.createElement(Dialog, {\n      open: confirmationVisible,\n      onClose: this.cancelDelete,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 505\n      },\n      __self: this\n    }, \"Delete Appointment\"), React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506\n      },\n      __self: this\n    }, React.createElement(DialogContentText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 507\n      },\n      __self: this\n    }, \"Are you sure you want to delete this appointment?\")), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.toggleConfirmationVisible,\n      color: \"primary\",\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 512\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Button, {\n      onClick: this.commitDeletedAppointment,\n      color: \"secondary\",\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 519\n      },\n      __self: this\n    }, \"Delete\"))), React.createElement(Fab, {\n      color: \"secondary\",\n      className: classes.addButton,\n      onClick: () => {\n        this.setState({\n          editingFormVisible: true\n        });\n        this.onEditingAppointmentChange(undefined);\n        this.onAddedAppointmentChange({\n          startDate: new Date(currentDate).setHours(startDayHour),\n          endDate: new Date(currentDate).setHours(startDayHour + 1)\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 529\n      },\n      __self: this\n    }, React.createElement(AddIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 541\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default withStyles(styles, {\n  name: \"EditingDemo\"\n})(Calender);","map":{"version":3,"sources":["/Users/rbk-4/Desktop/reservations/src/Calender.js"],"names":["React","Paper","$","ViewState","EditingState","IntegratedEditing","Scheduler","Toolbar","MonthView","WeekView","DayView","ViewSwitcher","Appointments","AppointmentTooltip","AppointmentForm","DragDropProvider","EditRecurrenceMenu","AllDayPanel","ConfirmationDialog","connectProps","KeyboardDateTimePicker","MuiPickersUtilsProvider","MomentUtils","withStyles","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Button","Fab","IconButton","AddIcon","TextField","EventNoteIcon","Notes","Close","CalendarToday","Create","axios","appointments","containerStyles","theme","container","width","spacing","padding","paddingBottom","content","paddingTop","header","overflow","closeButton","float","buttonGroup","display","justifyContent","button","marginLeft","picker","marginRight","wrapper","icon","margin","textField","today","Date","date","getFullYear","getMonth","getDate","AppointmentFormContainerBasic","PureComponent","constructor","props","handleChange","e","setState","title","target","value","state","appointmentChanges","getAppointmentData","appointmentData","getAppointmentChanges","bind","changeAppointment","commitAppointment","field","changes","nextChanges","type","commitChanges","appointment","_id","render","classes","visible","visibleChange","cancelAppointment","onHide","displayAppointmentData","li","window","location","pathname","slice","console","log","isNewAppointment","undefined","applyChanges","post","startDate","endDate","notes","shopId","textEditorProps","variant","onChange","change","label","toUpperCase","className","pickerEditorProps","ampm","toDate","inputVariant","format","onError","cancelChanges","x","AppointmentFormContainer","name","styles","addButton","position","bottom","right","Calender","data","currentDate","confirmationVisible","editingFormVisible","deletedAppointmentId","editingAppointment","previousAppointment","addedAppointment","startDayHour","endDayHour","that","ajax","url","dataType","success","error","err","toggleConfirmationVisible","commitDeletedAppointment","toggleEditingFormVisibility","onEditingAppointmentChange","onAddedAppointmentChange","appointmentForm","currentAppointment","filter","componentDidUpdate","update","setDeletedAppointmentId","nextData","added","changed","deleted","startingAddedId","length","map","cancelDelete","setHours"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport $ from \"jquery\";\r\nimport {\r\n  ViewState,\r\n  EditingState,\r\n  IntegratedEditing\r\n} from \"@devexpress/dx-react-scheduler\";\r\nimport {\r\n  Scheduler,\r\n  Toolbar,\r\n  MonthView,\r\n  WeekView,\r\n  DayView,\r\n  ViewSwitcher,\r\n  Appointments,\r\n  AppointmentTooltip,\r\n  AppointmentForm,\r\n  DragDropProvider,\r\n  EditRecurrenceMenu,\r\n  AllDayPanel,\r\n  ConfirmationDialog\r\n} from \"@devexpress/dx-react-scheduler-material-ui\";\r\nimport { connectProps } from \"@devexpress/dx-react-core\";\r\nimport {\r\n  KeyboardDateTimePicker,\r\n  MuiPickersUtilsProvider\r\n} from \"@material-ui/pickers\";\r\nimport MomentUtils from \"@date-io/moment\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport EventNoteIcon from \"@material-ui/icons/EventNote\";\r\nimport Notes from \"@material-ui/icons/Notes\";\r\nimport Close from \"@material-ui/icons/Close\";\r\nimport CalendarToday from \"@material-ui/icons/CalendarToday\";\r\nimport Create from \"@material-ui/icons/Create\";\r\nimport axios from \"axios\";\r\nimport { appointments } from \"./data\";\r\n\r\nconst containerStyles = theme => ({\r\n  container: {\r\n    width: theme.spacing(68),\r\n    padding: 0,\r\n    paddingBottom: theme.spacing(2)\r\n  },\r\n  content: {\r\n    padding: theme.spacing(2),\r\n    paddingTop: 0\r\n  },\r\n  header: {\r\n    overflow: \"hidden\",\r\n    paddingTop: theme.spacing(0.5)\r\n  },\r\n  closeButton: {\r\n    float: \"right\"\r\n  },\r\n  buttonGroup: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n    padding: theme.spacing(0, 2)\r\n  },\r\n  button: {\r\n    marginLeft: theme.spacing(2)\r\n  },\r\n  picker: {\r\n    marginRight: theme.spacing(2),\r\n    \"&:last-child\": {\r\n      marginRight: 0\r\n    },\r\n    width: \"50%\"\r\n  },\r\n  wrapper: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    padding: theme.spacing(1, 0)\r\n  },\r\n  icon: {\r\n    margin: theme.spacing(2, 0),\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  textField: {\r\n    width: \"100%\"\r\n  }\r\n});\r\n\r\nvar today = new Date();\r\nvar date =\r\n  today.getFullYear() + \"-\" + (today.getMonth() + 1) + \"-\" + today.getDate();\r\n\r\nclass AppointmentFormContainerBasic extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      appointmentChanges: {}\r\n    };\r\n\r\n    this.getAppointmentData = () => {\r\n      const { appointmentData } = this.props;\r\n      return appointmentData;\r\n    };\r\n    this.getAppointmentChanges = () => {\r\n      const { appointmentChanges } = this.state;\r\n      return appointmentChanges;\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.changeAppointment = this.changeAppointment.bind(this);\r\n    this.commitAppointment = this.commitAppointment.bind(this);\r\n  }\r\n  handleChange = () =>\r\n    function(e) {\r\n      this.setState({\r\n        title: e.target.value\r\n      });\r\n    };\r\n  changeAppointment({ field, changes }) {\r\n    const nextChanges = {\r\n      ...this.getAppointmentChanges(),\r\n      [field]: changes\r\n    };\r\n    this.setState({\r\n      appointmentChanges: nextChanges\r\n    });\r\n  }\r\n\r\n  commitAppointment(type) {\r\n    const { commitChanges } = this.props;\r\n    const appointment = {\r\n      ...this.getAppointmentData(),\r\n      ...this.getAppointmentChanges()\r\n    };\r\n    if (type === \"deleted\") {\r\n      commitChanges({ [type]: appointment._id });\r\n    } else if (type === \"changed\") {\r\n      commitChanges({ [type]: { [appointment._id]: appointment } });\r\n    } else {\r\n      commitChanges({ [type]: appointment });\r\n    }\r\n    this.setState({\r\n      appointmentChanges: {}\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      classes,\r\n      visible,\r\n      visibleChange,\r\n      appointmentData,\r\n      cancelAppointment,\r\n      target,\r\n      onHide\r\n    } = this.props;\r\n    const { appointmentChanges } = this.state;\r\n\r\n    const displayAppointmentData = {\r\n      ...appointmentData,\r\n      ...appointmentChanges\r\n    };\r\n    var li = window.location.pathname.slice(4);\r\n    console.log(li);\r\n    const isNewAppointment = appointmentData._id === undefined;\r\n    const applyChanges = isNewAppointment\r\n      ? () => {\r\n          this.commitAppointment(\"added\");\r\n          axios.post(\"/Appointments\", {\r\n            title: this.state.appointmentChanges.title,\r\n            startDate: this.state.appointmentChanges.startDate,\r\n            endDate: this.state.appointmentChanges.endDate,\r\n            notes: this.state.appointmentChanges.notes,\r\n            type: this.state.appointmentChanges.type,\r\n            shopId: li\r\n          });\r\n          console.log(\"if new\", this.state.appointmentChanges);\r\n        }\r\n      : () => {\r\n          this.commitAppointment(\"changed\");\r\n          axios.post(\"/Appointments\", this.state.appointmentChanges);\r\n          console.log(\"old\", this.state.appointmentChanges);\r\n        };\r\n\r\n    const textEditorProps = field => ({\r\n      variant: \"outlined\",\r\n      onChange: ({ target: change }) =>\r\n        this.changeAppointment({\r\n          field: [field],\r\n          changes: change.value\r\n        }),\r\n      value: displayAppointmentData[field] || \"\",\r\n      label: field[0].toUpperCase() + field.slice(1),\r\n      className: classes.textField\r\n    });\r\n\r\n    const pickerEditorProps = field => ({\r\n      className: classes.picker,\r\n      // keyboard: true,\r\n      ampm: false,\r\n      value: displayAppointmentData[field],\r\n      onChange: date =>\r\n        this.changeAppointment({\r\n          field: [field],\r\n          changes: date\r\n            ? date.toDate()\r\n            : new Date(displayAppointmentData[field])\r\n        }),\r\n      inputVariant: \"outlined\",\r\n      format: \"DD/MM/YYYY HH:mm\",\r\n      onError: () => null\r\n    });\r\n\r\n    const cancelChanges = () => {\r\n      this.setState({\r\n        appointmentChanges: {}\r\n      });\r\n      visibleChange();\r\n      cancelAppointment();\r\n    };\r\n\r\n    return (\r\n      <AppointmentForm.Overlay\r\n        visible={visible}\r\n        target={target}\r\n        fullSize\r\n        onHide={onHide}\r\n      >\r\n        <div>\r\n          <div className={classes.header}>\r\n            <IconButton className={classes.closeButton} onClick={cancelChanges}>\r\n              <Close color=\"action\" />\r\n            </IconButton>\r\n          </div>\r\n          <div className={classes.content}>\r\n            <div className={classes.wrapper}>\r\n              <Create className={classes.icon} color=\"action\" />\r\n              <TextField {...textEditorProps(\"title\")} />\r\n            </div>\r\n            <div className={classes.wrapper}>\r\n              <CalendarToday className={classes.icon} color=\"action\" />\r\n              <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                <KeyboardDateTimePicker\r\n                  label=\"Start Date\"\r\n                  {...pickerEditorProps(\"startDate\")}\r\n                />\r\n                <KeyboardDateTimePicker\r\n                  label=\"End Date\"\r\n                  {...pickerEditorProps(\"endDate\")}\r\n                />\r\n              </MuiPickersUtilsProvider>\r\n            </div>\r\n            <div className={classes.wrapper}>\r\n              <EventNoteIcon className={classes.icon} color=\"action\" />\r\n              <TextField {...textEditorProps(\"type\")} />\r\n            </div>\r\n            <div className={classes.wrapper}>\r\n              <Notes className={classes.icon} color=\"action\" />\r\n              <TextField\r\n                ref={x => (this.notes = x)}\r\n                {...textEditorProps(\"notes\")}\r\n                multiline\r\n                rows=\"6\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className={classes.buttonGroup}>\r\n            {!isNewAppointment && (\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"secondary\"\r\n                className={classes.button}\r\n                onClick={() => {\r\n                  visibleChange();\r\n                  this.commitAppointment(\"deleted\");\r\n                }}\r\n              >\r\n                Delete\r\n              </Button>\r\n            )}\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              onClick={() => {\r\n                visibleChange();\r\n                applyChanges();\r\n              }}\r\n            >\r\n              {isNewAppointment ? \"Create\" : \"Save\"}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </AppointmentForm.Overlay>\r\n    );\r\n  }\r\n}\r\n\r\nconst AppointmentFormContainer = withStyles(containerStyles, {\r\n  name: \"AppointmentFormContainer\"\r\n})(AppointmentFormContainerBasic);\r\n\r\nconst styles = theme => ({\r\n  addButton: {\r\n    position: \"absolute\",\r\n    bottom: theme.spacing(1) * 3,\r\n    right: theme.spacing(1) * 4\r\n  }\r\n});\r\n\r\nclass Calender extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: appointments,\r\n      currentDate: date,\r\n      confirmationVisible: false,\r\n      editingFormVisible: false,\r\n      deletedAppointmentId: undefined,\r\n      editingAppointment: undefined,\r\n      previousAppointment: undefined,\r\n      addedAppointment: {},\r\n      startDayHour: 0,\r\n      endDayHour: 24,\r\n      isNewAppointment: false\r\n    };\r\n\r\n    var that = this;\r\n    $.ajax({\r\n      url: \"/Appointments\",\r\n      type: \"GET\",\r\n      dataType: \"JSON\",\r\n      success: function(data) {\r\n        that.setState({ data: data });\r\n        console.log(\"get\", that.state.data);\r\n      },\r\n      error: function(err) {\r\n        console.log(err);\r\n      }\r\n    });\r\n\r\n    this.toggleConfirmationVisible = this.toggleConfirmationVisible.bind(this);\r\n    this.commitDeletedAppointment = this.commitDeletedAppointment.bind(this);\r\n    this.toggleEditingFormVisibility = this.toggleEditingFormVisibility.bind(\r\n      this\r\n    );\r\n\r\n    this.commitChanges = this.commitChanges.bind(this);\r\n    this.onEditingAppointmentChange = this.onEditingAppointmentChange.bind(\r\n      this\r\n    );\r\n    this.onAddedAppointmentChange = this.onAddedAppointmentChange.bind(this);\r\n    this.appointmentForm = connectProps(AppointmentFormContainer, () => {\r\n      const {\r\n        editingFormVisible,\r\n        editingAppointment,\r\n        data,\r\n        addedAppointment,\r\n        isNewAppointment,\r\n        previousAppointment\r\n      } = this.state;\r\n\r\n      const currentAppointment =\r\n        data.filter(\r\n          appointment =>\r\n            editingAppointment && appointment._id === editingAppointment._id\r\n        )[0] || addedAppointment;\r\n      const cancelAppointment = () => {\r\n        if (isNewAppointment) {\r\n          this.setState({\r\n            editingAppointment: previousAppointment,\r\n            isNewAppointment: false\r\n          });\r\n        }\r\n      };\r\n\r\n      return {\r\n        visible: editingFormVisible,\r\n        appointmentData: currentAppointment,\r\n        commitChanges: this.commitChanges,\r\n        visibleChange: this.toggleEditingFormVisibility,\r\n        onEditingAppointmentChange: this.onEditingAppointmentChange,\r\n        cancelAppointment\r\n      };\r\n    });\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.appointmentForm.update();\r\n  }\r\n\r\n  onEditingAppointmentChange(editingAppointment) {\r\n    this.setState({ editingAppointment });\r\n  }\r\n\r\n  onAddedAppointmentChange(addedAppointment) {\r\n    this.setState({ addedAppointment });\r\n    const { editingAppointment } = this.state;\r\n    if (editingAppointment !== undefined) {\r\n      this.setState({\r\n        previousAppointment: editingAppointment\r\n      });\r\n    }\r\n    this.setState({ editingAppointment: undefined, isNewAppointment: true });\r\n  }\r\n\r\n  setDeletedAppointmentId(_id) {\r\n    this.setState({ deletedAppointmentId: _id });\r\n  }\r\n\r\n  toggleEditingFormVisibility() {\r\n    const { editingFormVisible } = this.state;\r\n    this.setState({\r\n      editingFormVisible: !editingFormVisible\r\n    });\r\n  }\r\n\r\n  toggleConfirmationVisible() {\r\n    const { confirmationVisible } = this.state;\r\n    this.setState({ confirmationVisible: !confirmationVisible });\r\n  }\r\n\r\n  commitDeletedAppointment() {\r\n    this.setState(state => {\r\n      const { data, deletedAppointmentId } = state;\r\n      const nextData = data.filter(\r\n        appointment => appointment._id !== deletedAppointmentId\r\n      );\r\n\r\n      return { data: nextData, deletedAppointmentId: null };\r\n    });\r\n    this.toggleConfirmationVisible();\r\n  }\r\n  // function for the editing and deletion\r\n  commitChanges({ added, changed, deleted }) {\r\n    this.setState(state => {\r\n      let { data } = state;\r\n      if (added) {\r\n        const startingAddedId =\r\n          data.length > 0 ? data[data.length - 1]._id + 1 : 0;\r\n        data = [...data, { _id: startingAddedId, ...added }];\r\n      }\r\n      if (changed) {\r\n        data = data.map(appointment =>\r\n          changed[appointment._id]\r\n            ? { ...appointment, ...changed[appointment._id] }\r\n            : appointment\r\n        );\r\n      }\r\n      if (deleted !== undefined) {\r\n        this.setDeletedAppointmentId(deleted);\r\n        this.toggleConfirmationVisible();\r\n      }\r\n      return { data, addedAppointment: {} };\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      currentDate,\r\n      data,\r\n      confirmationVisible,\r\n      editingFormVisible,\r\n      startDayHour,\r\n      endDayHour\r\n    } = this.state;\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <Paper>\r\n        <Scheduler data={data} height={660}>\r\n          <ViewState currentDate={currentDate} />\r\n          <EditingState\r\n            onCommitChanges={this.commitChanges}\r\n            onEditingAppointmentChange={this.onEditingAppointmentChange}\r\n            onAddedAppointmentChange={this.onAddedAppointmentChange}\r\n          />\r\n          <IntegratedEditing />\r\n          <DayView startDayHour={0} endDayHour={24} />\r\n\r\n          <WeekView startDayHour={startDayHour} endDayHour={endDayHour} />\r\n          <MonthView />\r\n          <AllDayPanel />\r\n          <EditRecurrenceMenu />\r\n          <ConfirmationDialog />\r\n          <Appointments />\r\n          <AppointmentTooltip showOpenButton showCloseButton showDeleteButton />\r\n          <Toolbar />\r\n          <ViewSwitcher />\r\n          <AppointmentForm\r\n            overlayComponent={this.appointmentForm}\r\n            visible={editingFormVisible}\r\n            onVisibilityChange={this.toggleEditingFormVisibility}\r\n          />\r\n          <DragDropProvider />\r\n        </Scheduler>\r\n\r\n        <Dialog open={confirmationVisible} onClose={this.cancelDelete}>\r\n          <DialogTitle>Delete Appointment</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              Are you sure you want to delete this appointment?\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button\r\n              onClick={this.toggleConfirmationVisible}\r\n              color=\"primary\"\r\n              variant=\"outlined\"\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              onClick={this.commitDeletedAppointment}\r\n              color=\"secondary\"\r\n              variant=\"outlined\"\r\n            >\r\n              Delete\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        <Fab\r\n          color=\"secondary\"\r\n          className={classes.addButton}\r\n          onClick={() => {\r\n            this.setState({ editingFormVisible: true });\r\n            this.onEditingAppointmentChange(undefined);\r\n            this.onAddedAppointmentChange({\r\n              startDate: new Date(currentDate).setHours(startDayHour),\r\n              endDate: new Date(currentDate).setHours(startDayHour + 1)\r\n            });\r\n          }}\r\n        >\r\n          <AddIcon />\r\n        </Fab>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles, { name: \"EditingDemo\" })(Calender);\r\n"]},"metadata":{},"sourceType":"module"}