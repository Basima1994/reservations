{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport * as React from 'react';\nimport { useInternationalization, useLocalization } from '@progress/kendo-react-intl';\nimport { SchedulerContext } from './context';\nimport { getModelFields } from './utils';\nimport { usePropOrState } from './hooks'; // tslint:enable:max-line-length\n\n/** @hidden */\n\nexport var BaseScheduler = function (props) {\n  var group = props.group,\n      height = props.height,\n      timezone = props.timezone,\n      resources = props.resources,\n      modelFields = props.modelFields,\n      onViewChange = props.onViewChange,\n      onDateChange = props.onDateChange,\n      onItemDrop = props.onItemDrop,\n      onItemClick = props.onItemClick,\n      onItemDoubleClick = props.onItemDoubleClick,\n      onItemRemoveClick = props.onItemRemoveClick,\n      onSlotClick = props.onSlotClick,\n      onSlotDoubleClick = props.onSlotDoubleClick;\n  var target = React.useRef(null);\n  React.useImperativeHandle(target, function () {\n    return {\n      props: props\n    };\n  });\n  var fields = React.useMemo(function () {\n    return getModelFields(modelFields);\n  }, [modelFields]).fields;\n  var intl = useInternationalization();\n  var localization = useLocalization();\n  var data = props.data || [];\n\n  var _a = usePropOrState(props.rtl),\n      rtl = _a[0],\n      setRtl = _a[1];\n\n  var _b = usePropOrState(props.date, props.defaultDate),\n      date = _b[0],\n      setDate = _b[1];\n\n  var _c = usePropOrState(props.view, props.defaultView),\n      activeViewName = _c[0],\n      setActiveViewName = _c[1];\n\n  var views = React.Children.toArray(props.children || []);\n  var activeView = views.filter(function (currentView) {\n    return currentView.props.name === activeViewName;\n  })[0] || views[0];\n  var handleDateChange = React.useCallback(function (value) {\n    setDate(value);\n\n    if (onDateChange) {\n      var args = {\n        value: value\n      };\n      onDateChange.call(undefined, args);\n    }\n  }, [onDateChange]);\n  var handleViewChange = React.useCallback(function (event) {\n    if (!event.props || !event.props.name) {\n      return;\n    }\n\n    var value = event.props.name;\n    setActiveViewName(value);\n\n    if (onViewChange) {\n      var args = {\n        value: value\n      };\n      onViewChange.call(undefined, args);\n    }\n  }, [onViewChange]); // Events\n\n  var handleItemDrop = React.useCallback(function (event) {\n    if (onItemDrop) {\n      onItemDrop.call(undefined, event);\n    }\n  }, [onItemDrop]);\n  var handleItemClick = React.useCallback(function (event) {\n    if (onItemClick) {\n      onItemClick.call(undefined, event);\n    }\n  }, [onItemClick]);\n  var handleItemDoubleClick = React.useCallback(function (event) {\n    if (onItemDoubleClick) {\n      onItemDoubleClick.call(undefined, event);\n    }\n  }, [onItemDoubleClick]);\n  var handleItemRemoveClick = React.useCallback(function (event) {\n    if (onItemRemoveClick) {\n      onItemRemoveClick.call(undefined, event);\n    }\n  }, []); // Slots\n\n  var handleSlotClick = React.useCallback(function (event) {\n    if (onSlotClick) {\n      onSlotClick.call(undefined, event);\n    }\n  }, []);\n  var handleSlotDoubleClick = React.useCallback(function (event) {\n    if (onSlotDoubleClick) {\n      onSlotDoubleClick.call(undefined, event);\n    }\n  }, []);\n  return React.createElement(React.Fragment, null, React.createElement(SchedulerContext.Provider, {\n    value: {\n      date: date,\n      group: group,\n      resources: resources,\n      intl: intl,\n      height: height,\n      fields: fields,\n      timezone: timezone,\n      localization: localization,\n      rtl: rtl,\n      setRtl: setRtl,\n      data: data,\n      onDateChange: handleDateChange,\n      view: activeView,\n      views: views,\n      onViewChange: handleViewChange,\n      onSlotClick: handleSlotClick,\n      onSlotDoubleClick: handleSlotDoubleClick,\n      onItemDrop: handleItemDrop,\n      onItemClick: handleItemClick,\n      onItemDoubleClick: handleItemDoubleClick,\n      onItemRemoveClick: handleItemRemoveClick\n    }\n  }, activeView && React.createElement(activeView.type, __assign({\n    editable: props.editable,\n    key: activeView.props.name\n  }, activeView.props))));\n};\nvar defaultProps = {\n  defaultView: 'day',\n  defaultDate: new Date(),\n  editable: false,\n  data: [],\n  height: 600\n};\nBaseScheduler.defaultProps = defaultProps;\nBaseScheduler.displayName = 'KendoReactBaseScheduler';","map":null,"metadata":{},"sourceType":"module"}